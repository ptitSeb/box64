#if !(defined(GO) && defined(GOM) && defined(GO2) && defined(DATA))
#error Meh...
#endif

//gnutls_session_t is p
//gnutls_channel_binding_t is i

//GO(_dsa_generate_dss_g, 
//GO(dsa_generate_dss_keypair, 
//GO(_dsa_generate_dss_pq, 
//GO(_dsa_validate_dss_g, 
//GO(_dsa_validate_dss_pq, 
GO(gnutls_aead_cipher_decrypt, iFppLpLLpLpbL_)
GO(gnutls_aead_cipher_deinit, vFp)
GO(gnutls_aead_cipher_encrypt, iFppLpLLpLpbL_)
GO(gnutls_aead_cipher_init, iFbp_ubpu_)
GO(gnutls_alert_get, uFp)
GO(gnutls_alert_get_name, pFu)
GO(gnutls_alert_get_strname, pFu)
GO(gnutls_alert_send, iFpuu)
GO(gnutls_alert_send_appropriate, iFpi)
GO(gnutls_alpn_get_selected_protocol, iFpbpu_)
GO(gnutls_alpn_set_protocols, iFpbpu_uu)
GO(gnutls_anon_allocate_client_credentials, iFbp_)
GO(gnutls_anon_allocate_server_credentials, iFbp_)
GO(gnutls_anon_free_client_credentials, vFp)
GO(gnutls_anon_free_server_credentials, vFp)
//GOM(gnutls_anon_set_params_function, vFEpp)
GO(gnutls_anon_set_server_dh_params, vFpp)
GO(gnutls_anon_set_server_known_dh_params, iFpu)
//GOM(gnutls_anon_set_server_params_function, vFEpp)
GO(gnutls_auth_client_get_type, uFp)
GO(gnutls_auth_get_type, uFp)
GO(gnutls_auth_server_get_type, uFp)
//GO(_gnutls_bin2hex, 
GO(gnutls_buffer_append_data, iFppL)
//GO(_gnutls_buffer_append_str, 
//GO(_gnutls_buffer_init, 
//GO(_gnutls_buffer_to_datum, 
GO(gnutls_bye, iFpu)
GO(gnutls_certificate_activation_time_peers, IFp)
GO(gnutls_certificate_allocate_credentials, iFbp_)
GO(gnutls_certificate_client_get_request_status, uFp)
GO(gnutls_certificate_expiration_time_peers, IFp)
GO(gnutls_certificate_free_ca_names, vFp)
GO(gnutls_certificate_free_cas, vFp)
GO(gnutls_certificate_free_credentials, vFp)
GO(gnutls_certificate_free_crls, vFp)
GO(gnutls_certificate_free_keys, vFp)
GO(gnutls_certificate_get_crt_raw, iFpuubpu_)
GO(gnutls_certificate_get_issuer, iFppbp_u)
//GO(gnutls_certificate_get_openpgp_crt, iFpubbp__p)
GO(gnutls_certificate_get_openpgp_key, iFpubp_)
//GO(gnutls_certificate_get_ours, bpu_Fp)
GOM(gnutls_certificate_get_peers, pFEpp)
GO(gnutls_certificate_get_peers_subkey_id, iFpbpu_)
GO(gnutls_certificate_get_trust_list, vFpbp_)
GO(gnutls_certificate_get_verify_flags, uFp)
//GO(gnutls_certificate_get_x509_crt, iFpubbp__p)
GO(gnutls_certificate_get_x509_key, iFpubp_)
GO(gnutls_certificate_send_x509_rdn_sequence, vFpi)
GO(gnutls_certificate_server_set_request, vFpu)
GO(gnutls_certificate_set_dh_params, vFpp)
GO(gnutls_certificate_set_flags, vFpu)
GO(gnutls_certificate_set_key, iFppipip) // Warning: failed to confirm
GO(gnutls_certificate_set_known_dh_params, iFpu)
GO(gnutls_certificate_set_ocsp_status_request_file, iFppu)
//GOM(gnutls_certificate_set_ocsp_status_request_function, vFEppp)
//GOM(gnutls_certificate_set_ocsp_status_request_function2, iFEpupp)
GO(gnutls_certificate_set_openpgp_key, iFppp)
GO(gnutls_certificate_set_openpgp_key_file, iFpppu)
GO(gnutls_certificate_set_openpgp_key_file2, iFppppu)
GO(gnutls_certificate_set_openpgp_key_mem, iFpbpu_bpu_u)
GO(gnutls_certificate_set_openpgp_key_mem2, iFpbpu_bpu_pu)
GO(gnutls_certificate_set_openpgp_keyring_file, iFppu)
GO(gnutls_certificate_set_openpgp_keyring_mem, iFppLu)
//GOM(gnutls_certificate_set_params_function, vFEpp)
//GOM(gnutls_certificate_set_pin_function, vFEppp)
//GOM(gnutls_certificate_set_retrieve_function, vFEpp)
//GOM(gnutls_certificate_set_retrieve_function2, vFEpp)
GO(gnutls_certificate_set_trust_list, vFppu)
GO(gnutls_certificate_set_verify_flags, vFpu)
//GOM(gnutls_certificate_set_verify_function, vFEpp)
GO(gnutls_certificate_set_verify_limits, vFpuu)
GO(gnutls_certificate_set_x509_crl, iFpbp_i)
GO(gnutls_certificate_set_x509_crl_file, iFppu)
GO(gnutls_certificate_set_x509_crl_mem, iFpbpu_u)
GO(gnutls_certificate_set_x509_key, iFpbp_ip)
GO(gnutls_certificate_set_x509_key_file, iFpppu)
GO(gnutls_certificate_set_x509_key_file2, iFpppupu)
GO(gnutls_certificate_set_x509_key_mem, iFpbpu_bpu_u)
GO(gnutls_certificate_set_x509_key_mem2, iFpbpu_bpu_upu)
GO(gnutls_certificate_set_x509_simple_pkcs12_file, iFppup)
GO(gnutls_certificate_set_x509_simple_pkcs12_mem, iFpbpu_up)
GO(gnutls_certificate_set_x509_system_trust, iFp)
GO(gnutls_certificate_set_x509_trust, iFpbp_i)
GO(gnutls_certificate_set_x509_trust_dir, iFppu)
GO(gnutls_certificate_set_x509_trust_file, iFppu)
GO(gnutls_certificate_set_x509_trust_mem, iFpbpu_u)
GO(gnutls_certificate_type_get, uFp)
GO(gnutls_certificate_type_get_id, uFp)
GO(gnutls_certificate_type_get_name, pFu)
GO(gnutls_certificate_type_list, pFv)
GO(gnutls_certificate_verification_status_print, iFuubpu_u)
GO(gnutls_certificate_verify_peers, iFpbupu_up)
GO(gnutls_certificate_verify_peers2, iFpp)
GO(gnutls_certificate_verify_peers3, iFppp)
GO(gnutls_check_version, pFp)
//GO(_gnutls_cidr_to_string, 
GO(gnutls_cipher_add_auth, iFppL)
GO(gnutls_cipher_decrypt, iFppL)
GO(gnutls_cipher_decrypt2, iFppLpL)
GO(gnutls_cipher_deinit, vFp)
GO(gnutls_cipher_encrypt, iFppL)
GO(gnutls_cipher_encrypt2, iFppLpL)
GO(gnutls_cipher_get, uFp)
GO(gnutls_cipher_get_block_size, uFu)
GO(gnutls_cipher_get_id, uFp)
GO(gnutls_cipher_get_iv_size, uFu)
GO(gnutls_cipher_get_key_size, LFu)
GO(gnutls_cipher_get_name, pFu)
GO(gnutls_cipher_get_tag_size, uFu)
GO(gnutls_cipher_init, iFbp_ubpu_bpu_)
GO(gnutls_cipher_list, pFv)
GO(gnutls_cipher_set_iv, vFppL)
GO(gnutls_cipher_suite_get_name, pFuuu)
GO(gnutls_cipher_suite_info, pFLppppp)
GO(gnutls_cipher_tag, iFppL)
GO(gnutls_compression_get, uFp)
GO(gnutls_compression_get_id, uFp)
GO(gnutls_compression_get_name, pFu)
GO(gnutls_compression_list, pFv)
GO(gnutls_credentials_clear, vFp)
GO(gnutls_credentials_get, iFpubp_)
GO(gnutls_credentials_set, iFpup)
//GOM(gnutls_crypto_register_aead_cipher, iFEuippppp)
//GOM(gnutls_crypto_register_cipher, iFEuipppppp)
//GOM(gnutls_crypto_register_digest, iFEuippppp)
//GOM(gnutls_crypto_register_mac, iFEuippppppp)
//GO(gnutls_db_check_entry, 
GO(gnutls_db_check_entry_time, IFbpu_)
GO(gnutls_db_get_default_cache_expiration, uFv)
GO(gnutls_db_get_ptr, pFp)
GO(gnutls_db_remove_session, vFp)
GO(gnutls_db_set_cache_expiration, vFpi)
GO(gnutls_db_set_ptr, vFpp)
//GOM(gnutls_db_set_remove_function, vFEpp)
//GOM(gnutls_db_set_retrieve_function, vFEpp)
//GOM(gnutls_db_set_store_function, vFEpp)
GO(gnutls_decode_rs_value, iFbpu_bpu_bpu_)
GO(gnutls_decode_ber_digest_info, iFbpu_ppp)
//GO(_gnutls_decode_ber_rs_raw, 
GO(gnutls_deinit, vFp)
GO(gnutls_dh_get_group, iFpbpu_bpu_)
GO(gnutls_dh_get_peers_public_bits, iFp)
GO(gnutls_dh_get_prime_bits, iFp)
GO(gnutls_dh_get_pubkey, iFpbpu_)
GO(gnutls_dh_get_secret_bits, iFp)
GO(gnutls_dh_params_cpy, iFpp)
GO(gnutls_dh_params_deinit, vFp)
GO(gnutls_dh_params_export2_pkcs3, iFpubpu_)
GO(gnutls_dh_params_export_pkcs3, iFpupbL_)
GO(gnutls_dh_params_export_raw, iFpbpu_bpu_p)
GO(gnutls_dh_params_generate2, iFpu)
GO(gnutls_dh_params_import_dsa, iFpp)
GO(gnutls_dh_params_import_pkcs3, iFpbpu_u)
GO(gnutls_dh_params_import_raw, iFpbpu_bpu_)
GO(gnutls_dh_params_import_raw2, iFpbpu_bpu_u)
GO(gnutls_dh_params_init, iFbp_)
GO(gnutls_dh_set_prime_bits, vFpu)
//GO(_gnutls_digest_exists, 
GO(gnutls_digest_get_id, uFp)
GO(gnutls_digest_get_name, pFu)
GO(gnutls_digest_get_oid, pFu)
GO(gnutls_digest_list, pFv)
//GOM(gnutls_dtls_cookie_send, iFEbpu_pLppp)
GO(gnutls_dtls_cookie_verify, iFbpu_pLpLp)
GO(gnutls_dtls_get_data_mtu, uFp)
GO(gnutls_dtls_get_mtu, uFp)
GO(gnutls_dtls_get_timeout, uFp)
GO(gnutls_dtls_prestate_set, vFpp)
GO(gnutls_dtls_set_data_mtu, iFpu)
GO(gnutls_dtls_set_mtu, vFpu)
GO(gnutls_dtls_set_timeouts, vFpuu)
GO(gnutls_ecc_curve_get, uFp)
GO(gnutls_ecc_curve_get_id, uFp)
GO(gnutls_ecc_curve_get_name, pFu)
GO(gnutls_ecc_curve_get_oid, pFu)
GO(gnutls_ecc_curve_get_pk, uFu)
GO(gnutls_ecc_curve_get_size, iFu)
GO(gnutls_ecc_curve_list, pFv)
//GO(_gnutls_ecdh_compute_key, iFipppppp)
//GO(gnutls_ecdh_compute_key, iFipppppp)
GO(gnutls_encode_ber_digest_info, iFubpu_bpu_)
//GO(_gnutls_encode_ber_rs_raw, 
GO(gnutls_error_is_fatal, iFi)
GO(gnutls_error_to_alert, iFip)
GO(gnutls_est_record_overhead_size, LFuuuuu)
GO(gnutls_privkey_export_dh_raw, iFppbpu_bpu_u)
GO(gnutls_ext_get_data, iFpubp_)
GO(gnutls_ext_get_name, pFu)
//GOM(gnutls_ext_register, iFEpiuppppp)
GO(gnutls_ext_set_data, vFpup)
GO(gnutls_fingerprint, iFubpu_pbL_)
GO(gnutls_fips140_mode_enabled, uFv)
GO(gnutls_fips140_set_mode, vFuu)
GO(gnutls_free, vFp)//DATAM(gnutls_free, 4)
GO(gnutls_global_deinit, vFv)
GO(gnutls_global_init, iFv)
//GOM(gnutls_global_set_audit_log_function, vFEp)
GOM(gnutls_global_set_log_function, vFEp)
GO(gnutls_global_set_log_level, vFi)
//GOM(gnutls_global_set_mem_functions, vFEppppp)
//GOM(gnutls_global_set_mutex, vFEpppp)
//GOM(gnutls_global_set_time_function, vFEp)
GO(gnutls_handshake, iFp)
GO(gnutls_handshake_description_get_name, pFu)
GO(gnutls_handshake_get_last_in, uFp)
GO(gnutls_handshake_get_last_out, uFp)
//GOM(gnutls_handshake_set_hook_function, vFEpuip)
GO(gnutls_handshake_set_max_packet_length, vFpL)
//GOM(gnutls_handshake_set_post_client_hello_function, vFEpp)
GO(gnutls_handshake_set_private_extensions, vFpi)
GO(gnutls_handshake_set_random, iFpbpu_)
GO(gnutls_handshake_set_timeout, vFpu)
GO(gnutls_hash, iFppL)
GO(gnutls_hash_deinit, vFpp)
GO(gnutls_hash_fast, iFupLp)
GO(gnutls_hash_get_len, uFu)
GO(gnutls_hash_init, iFbp_u)
GO(gnutls_hash_output, vFpp)
GO(gnutls_heartbeat_allowed, uFpu)
GO(gnutls_heartbeat_enable, vFpu)
GO(gnutls_heartbeat_get_timeout, uFp)
GO(gnutls_heartbeat_ping, iFpLuu)
GO(gnutls_heartbeat_pong, iFpu)
GO(gnutls_heartbeat_set_timeouts, vFpuu)
//GO(_gnutls_hello_set_default_version, 
GO(gnutls_hex2bin, iFpLpbL_)
GO(gnutls_hex_decode, iFbpu_pbL_)
GO(gnutls_hex_decode2, iFbpu_bpu_)
GO(gnutls_hex_encode, iFbpu_pbL_)
GO(gnutls_hex_encode2, iFbpu_bpu_)
GO(gnutls_hmac, iFppL)
GO(gnutls_hmac_deinit, vFpp)
GO(gnutls_hmac_fast, iFupLpLp)
GO(gnutls_hmac_get_len, uFu)
GO(gnutls_hmac_init, iFbp_upL)
GO(gnutls_hmac_output, vFpp)
GO(gnutls_hmac_set_nonce, vFppL)
GO(gnutls_idna_map, iFpubpu_u)
GO(gnutls_idna_reverse_map, iFpubpu_u)
GO(gnutls_init, iFbp_u)
//GO(_gnutls_ip_to_string, 
GO(gnutls_key_generate, iFbpu_u)
GO(gnutls_kx_get, uFp)
GO(gnutls_kx_get_id, uFp)
GO(gnutls_kx_get_name, pFu)
GO(gnutls_kx_list, pFv)
//GO(_gnutls_lib_simulate_error, 
GO(gnutls_load_file, iFpbpu_)
//GO(_gnutls_log, 
GO(gnutls_mac_get, uFp)
GO(gnutls_mac_get_id, uFp)
GO(gnutls_mac_get_key_size, LFu)
GO(gnutls_mac_get_name, pFu)
GO(gnutls_mac_get_nonce_size, LFu)
GO(gnutls_mac_list, pFv)
//GO(_gnutls_mac_to_entry, 
GO(gnutls_memcmp, iFppL)
GO(gnutls_memset, vFpiL)
//GO(_gnutls_mpi_log, 
GO(gnutls_ocsp_req_add_cert, iFpupp)
GO(gnutls_ocsp_req_add_cert_id, iFpubpu_bpu_bpu_)
GO(gnutls_ocsp_req_deinit, vFp)
GO(gnutls_ocsp_req_export, iFpbpu_)
GO(gnutls_ocsp_req_get_cert_id, iFpupbpu_bpu_bpu_)
GO(gnutls_ocsp_req_get_extension, iFpubpu_pbpu_)
GO(gnutls_ocsp_req_get_nonce, iFppbpu_)
GO(gnutls_ocsp_req_get_version, iFp)
GO(gnutls_ocsp_req_import, iFpbpu_)
GO(gnutls_ocsp_req_init, iFbp_)
GO(gnutls_ocsp_req_print, iFpubpu_)
GO(gnutls_ocsp_req_randomize_nonce, iFp)
GO(gnutls_ocsp_req_set_extension, iFppubpu_)
GO(gnutls_ocsp_req_set_nonce, iFpubpu_)
GO(gnutls_ocsp_resp_check_crt, iFpup)
GO(gnutls_ocsp_resp_deinit, vFp)
GO(gnutls_ocsp_resp_export, iFpbpu_)
//GO(gnutls_ocsp_resp_get_certs, iFpbbp__bL_)
GO(gnutls_ocsp_resp_get_extension, iFpubpu_pbpu_)
GO(gnutls_ocsp_resp_get_nonce, iFppbpu_)
GO(gnutls_ocsp_resp_get_produced, IFp)
GO(gnutls_ocsp_resp_get_responder, iFpbpu_)
GO(gnutls_ocsp_resp_get_responder2, iFpbpu_u)
GO(gnutls_ocsp_resp_get_responder_raw_id, iFpubpu_)
GO(gnutls_ocsp_resp_get_response, iFpbpu_bpu_)
GO(gnutls_ocsp_resp_get_signature, iFpbpu_)
GO(gnutls_ocsp_resp_get_signature_algorithm, iFp)
//GO(gnutls_ocsp_resp_get_single, iFpuppppppppp)
GO(gnutls_ocsp_resp_get_status, iFp)
GO(gnutls_ocsp_resp_get_version, iFp)
GO(gnutls_ocsp_resp_import, iFpbpu_)
GO(gnutls_ocsp_resp_init, iFbp_)
GO(gnutls_ocsp_resp_print, iFpubpu_)
GO(gnutls_ocsp_resp_verify, iFpppu)
GO(gnutls_ocsp_resp_verify_direct, iFpppu)
GO(gnutls_ocsp_status_request_enable_client, iFpbpu_Lbpu_)
GO(gnutls_ocsp_status_request_get, iFpbpu_)
GO(gnutls_ocsp_status_request_is_checked, uFpu)
GO(gnutls_oid_to_digest, uFp)
GO(gnutls_oid_to_ecc_curve, uFp)
GO(gnutls_oid_to_mac, uFp)
GO(gnutls_oid_to_pk, uFp)
GO(gnutls_oid_to_sign, uFp)
GO(gnutls_openpgp_crt_check_email, iFppu)
GO(gnutls_openpgp_crt_check_hostname, iFpp)
GO(gnutls_openpgp_crt_check_hostname2, iFppu)
GO(gnutls_openpgp_crt_deinit, vFp)
GO(gnutls_openpgp_crt_export, iFpupbL_)
GO(gnutls_openpgp_crt_export2, iFpubpu_)
GO(gnutls_openpgp_crt_get_auth_subkey, iFppu)
GO(gnutls_openpgp_crt_get_creation_time, IFp)
GO(gnutls_openpgp_crt_get_expiration_time, IFp)
GO(gnutls_openpgp_crt_get_fingerprint, iFppbL_)
GO(gnutls_openpgp_crt_get_key_id, iFpp)
GO(gnutls_openpgp_crt_get_key_usage, iFpp)
GO(gnutls_openpgp_crt_get_name, iFpipbL_)
GO(gnutls_openpgp_crt_get_pk_algorithm, uFpp)
GO(gnutls_openpgp_crt_get_pk_dsa_raw, iFpbpu_bpu_bpu_bpu_)
GO(gnutls_openpgp_crt_get_pk_rsa_raw, iFpbpu_bpu_)
GO(gnutls_openpgp_crt_get_preferred_key_id, iFpp)
GO(gnutls_openpgp_crt_get_revoked_status, iFp)
GO(gnutls_openpgp_crt_get_subkey_count, iFp)
GO(gnutls_openpgp_crt_get_subkey_creation_time, IFpu)
GO(gnutls_openpgp_crt_get_subkey_expiration_time, IFpu)
GO(gnutls_openpgp_crt_get_subkey_fingerprint, iFpupbL_)
GO(gnutls_openpgp_crt_get_subkey_id, iFpup)
GO(gnutls_openpgp_crt_get_subkey_idx, iFpp)
GO(gnutls_openpgp_crt_get_subkey_pk_algorithm, uFpup)
GO(gnutls_openpgp_crt_get_subkey_pk_dsa_raw, iFpubpu_bpu_bpu_bpu_)
GO(gnutls_openpgp_crt_get_subkey_pk_rsa_raw, iFpubpu_bpu_)
GO(gnutls_openpgp_crt_get_subkey_revoked_status, iFpu)
GO(gnutls_openpgp_crt_get_subkey_usage, iFpup)
GO(gnutls_openpgp_crt_get_version, iFp)
GO(gnutls_openpgp_crt_import, iFpbpu_u)
GO(gnutls_openpgp_crt_init, iFbp_)
GO(gnutls_openpgp_crt_print, iFpubpu_)
GO(gnutls_openpgp_crt_set_preferred_key_id, iFpp)
GO(gnutls_openpgp_crt_verify_ring, iFppup)
GO(gnutls_openpgp_crt_verify_self, iFpup)
GO(gnutls_openpgp_keyring_check_id, iFppu)
GO(gnutls_openpgp_keyring_deinit, vFp)
GO(gnutls_openpgp_keyring_get_crt, iFpubp_)
GO(gnutls_openpgp_keyring_get_crt_count, iFp)
GO(gnutls_openpgp_keyring_import, iFpbpu_u)
GO(gnutls_openpgp_keyring_init, iFbp_)
GO(gnutls_openpgp_privkey_deinit, vFp)
GO(gnutls_openpgp_privkey_export, iFpupupbL_)
GO(gnutls_openpgp_privkey_export2, iFpupubpu_)
GO(gnutls_openpgp_privkey_export_dsa_raw, iFpbpu_bpu_bpu_bpu_bpu_)
GO(gnutls_openpgp_privkey_export_rsa_raw, iFpbpu_bpu_bpu_bpu_bpu_bpu_)
GO(gnutls_openpgp_privkey_export_subkey_dsa_raw, iFpubpu_bpu_bpu_bpu_bpu_)
GO(gnutls_openpgp_privkey_export_subkey_rsa_raw, iFpubpu_bpu_bpu_bpu_bpu_bpu_)
GO(gnutls_openpgp_privkey_get_fingerprint, iFppbL_)
GO(gnutls_openpgp_privkey_get_key_id, iFpp)
GO(gnutls_openpgp_privkey_get_pk_algorithm, uFpp)
GO(gnutls_openpgp_privkey_get_preferred_key_id, iFpp)
GO(gnutls_openpgp_privkey_get_revoked_status, iFp)
GO(gnutls_openpgp_privkey_get_subkey_count, iFp)
GO(gnutls_openpgp_privkey_get_subkey_creation_time, IFpu)
GO(gnutls_openpgp_privkey_get_subkey_expiration_time, IFpu)
GO(gnutls_openpgp_privkey_get_subkey_fingerprint, iFpupbL_)
GO(gnutls_openpgp_privkey_get_subkey_id, iFpup)
GO(gnutls_openpgp_privkey_get_subkey_idx, iFpp)
GO(gnutls_openpgp_privkey_get_subkey_pk_algorithm, uFpup)
GO(gnutls_openpgp_privkey_get_subkey_revoked_status, iFpu)
GO(gnutls_openpgp_privkey_import, iFpbpu_upu)
GO(gnutls_openpgp_privkey_init, iFbp_)
GO(gnutls_openpgp_privkey_sec_param, uFp)
GO(gnutls_openpgp_privkey_set_preferred_key_id, iFpp)
GO(gnutls_openpgp_privkey_sign_hash, iFpbpu_bpu_)
GO(gnutls_openpgp_send_cert, vFpu)
//GOM(gnutls_openpgp_set_recv_key_function, vFEpp)
GO(gnutls_packet_deinit, vFp)
GO(gnutls_packet_get, vFpbpu_p)
GO(gnutls_pcert_deinit, vFp) // Warning: failed to confirm
GO(gnutls_pcert_export_openpgp, iFpp) // Warning: failed to confirm
GO(gnutls_pcert_export_x509, iFpp) // Warning: failed to confirm
GO(gnutls_pcert_import_openpgp, iFppu) // Warning: failed to confirm
GO(gnutls_pcert_import_openpgp_raw, iFppupu) // Warning: failed to confirm
GO(gnutls_pcert_import_x509, iFppu) // Warning: failed to confirm
GO(gnutls_pcert_import_x509_list, iFpppu) // Warning: failed to confirm
GO(gnutls_pcert_import_x509_raw, iFppuu) // Warning: failed to confirm
GO(gnutls_pcert_list_import_x509_raw, iFpppuu) // Warning: failed to confirm
GO(gnutls_pem_base64_decode, iFpbpu_pbL_)
GO(gnutls_pem_base64_decode2, iFpbpu_bpu_)
GO(gnutls_pem_base64_encode, iFpbpu_pbL_)
GO(gnutls_pem_base64_encode2, iFpbpu_bpu_)
GO(gnutls_perror, vFi)
GO(gnutls_pk_algorithm_get_name, pFu)
GO(gnutls_pk_bits_to_sec_param, uFuu)
GO(gnutls_pkcs11_add_provider, iFpp)
GO(gnutls_pkcs11_copy_attached_extension, iFppbpu_pu)
GO(gnutls_pkcs11_copy_pubkey, iFpppbpu_uu)
GO(gnutls_pkcs11_copy_secret_key, iFpbpu_puu)
GO(gnutls_pkcs11_copy_x509_crt2, iFpppbpu_u)
GO(gnutls_pkcs11_copy_x509_privkey2, iFpppbpu_uu)
GO(gnutls_pkcs11_crt_is_known, uFppu)
GO(gnutls_pkcs11_deinit, vFv)
GO(gnutls_pkcs11_delete_url, iFpu)
//GOM(gnutls_pkcs11_get_pin_function, pFEbp_)
GO(gnutls_pkcs11_get_raw_issuer, iFppbpu_uu)
GO(gnutls_pkcs11_get_raw_issuer_by_dn, iFpbpu_bpu_uu)
GO(gnutls_pkcs11_get_raw_issuer_by_subject_key_id, iFpbpu_bpu_bpu_uu)
GO(gnutls_pkcs11_init, iFup)
GO(gnutls_pkcs11_obj_deinit, vFp)
GO(gnutls_pkcs11_obj_export, iFppbL_)
GO(gnutls_pkcs11_obj_export2, iFpbpu_)
GO(gnutls_pkcs11_obj_export3, iFpubpu_)
GO(gnutls_pkcs11_obj_export_url, iFpubp_)
GO(gnutls_pkcs11_obj_flags_get_str, pFu)
GO(gnutls_pkcs11_obj_get_exts, iFpppu) // Warning: failed to confirm
GO(gnutls_pkcs11_obj_get_flags, iFpp)
GO(gnutls_pkcs11_obj_get_info, iFpupbL_)
GO(gnutls_pkcs11_obj_get_type, uFp)
GO(gnutls_pkcs11_obj_import_url, iFppu)
GO(gnutls_pkcs11_obj_init, iFbp_)
GO(gnutls_pkcs11_obj_list_import_url3, iFbp_ppu)
//GO(gnutls_pkcs11_obj_list_import_url4, iFbbp__ppu)
GO(gnutls_pkcs11_obj_set_info, iFpupLu)
//GOM(gnutls_pkcs11_obj_set_pin_function, vFEppp)
GO(gnutls_pkcs11_privkey_cpy, iFpp)
GO(gnutls_pkcs11_privkey_deinit, vFp)
GO(gnutls_pkcs11_privkey_export_pubkey, iFpubpu_u)
GO(gnutls_pkcs11_privkey_export_url, iFpubp_)
GO(gnutls_pkcs11_privkey_generate3, iFpuupbpu_ubpu_uu)
GO(gnutls_pkcs11_privkey_get_info, iFpupbL_)
GO(gnutls_pkcs11_privkey_get_pk_algorithm, iFpp)
GO(gnutls_pkcs11_privkey_import_url, iFppu)
GO(gnutls_pkcs11_privkey_init, iFbp_)
//GOM(gnutls_pkcs11_privkey_set_pin_function, vFEppp)
GO(gnutls_pkcs11_privkey_status, uFp)
GO(gnutls_pkcs11_reinit, iFv)
//GOM(gnutls_pkcs11_set_pin_function, vFEpp)
//GOM(gnutls_pkcs11_set_token_function, vFEpp)
GO(gnutls_pkcs11_token_get_flags, iFpp)
GO(gnutls_pkcs11_token_get_info, iFpupbL_)
GO(gnutls_pkcs11_token_get_mechanism, iFpubL_)
GO(gnutls_pkcs11_token_get_random, iFppL)
GO(gnutls_pkcs11_token_get_url, iFuubp_)
GO(gnutls_pkcs11_token_init, iFppp)
GO(gnutls_pkcs11_token_set_pin, iFpppu)
GO(gnutls_pkcs11_type_get_name, pFu)
GO(gnutls_pkcs12_bag_decrypt, iFpp)
GO(gnutls_pkcs12_bag_deinit, vFp)
GO(gnutls_pkcs12_bag_enc_info, iFppppppbp_)
GO(gnutls_pkcs12_bag_encrypt, iFppu)
GO(gnutls_pkcs12_bag_get_count, iFp)
GO(gnutls_pkcs12_bag_get_data, iFpubpu_)
GO(gnutls_pkcs12_bag_get_friendly_name, iFpubp_)
GO(gnutls_pkcs12_bag_get_key_id, iFpubpu_)
GO(gnutls_pkcs12_bag_get_type, iFpu)
GO(gnutls_pkcs12_bag_init, iFbp_)
GO(gnutls_pkcs12_bag_set_crl, iFpp)
GO(gnutls_pkcs12_bag_set_crt, iFpp)
GO(gnutls_pkcs12_bag_set_data, iFpubpu_)
GO(gnutls_pkcs12_bag_set_friendly_name, iFpup)
GO(gnutls_pkcs12_bag_set_key_id, iFpubpu_)
GO(gnutls_pkcs12_bag_set_privkey, iFpppu)
GO(gnutls_pkcs12_deinit, vFp)
GO(gnutls_pkcs12_export, iFpupbL_)
GO(gnutls_pkcs12_export2, iFpubpu_)
GO(gnutls_pkcs12_generate_mac, iFpp)
GO(gnutls_pkcs12_generate_mac2, iFpup)
GO(gnutls_pkcs12_get_bag, iFpip)
GO(gnutls_pkcs12_import, iFpbpu_uu)
GO(gnutls_pkcs12_init, iFbp_)
GO(gnutls_pkcs12_mac_info, iFpppppbp_)
GO(gnutls_pkcs12_set_bag, iFpp)
GOM(gnutls_pkcs12_simple_parse, iFEppppppppu)
//GO(_gnutls_pkcs12_string_to_key, 
GO(gnutls_pkcs12_verify_mac, iFpp)
GO(gnutls_pkcs7_add_attr, iFbp_pbpu_u)
GO(gnutls_pkcs7_attrs_deinit, vFp)
GO(gnutls_pkcs7_deinit, vFp)
GO(gnutls_pkcs7_delete_crl, iFpi)
GO(gnutls_pkcs7_delete_crt, iFpi)
GO(gnutls_pkcs7_export, iFpupbL_)
GO(gnutls_pkcs7_export2, iFpubpu_)
GO(gnutls_pkcs7_get_attr, iFpubp_bpu_u)
GO(gnutls_pkcs7_get_crl_count, iFp)
GO(gnutls_pkcs7_get_crl_raw, iFpupbL_)
GO(gnutls_pkcs7_get_crl_raw2, iFpubpu_)
GO(gnutls_pkcs7_get_crt_count, iFp)
GO(gnutls_pkcs7_get_crt_raw, iFpupbL_)
GO(gnutls_pkcs7_get_crt_raw2, iFpubpu_)
GO(gnutls_pkcs7_get_embedded_data, iFpubpu_)
GO(gnutls_pkcs7_get_embedded_data_oid, pFp)
GO(gnutls_pkcs7_get_signature_count, iFp)
//GO(gnutls_pkcs7_get_signature_info, iFpup)
GO(gnutls_pkcs7_import, iFpbpu_u)
GO(gnutls_pkcs7_init, iFbp_)
GO(gnutls_pkcs7_print, iFpubpu_)
GO(gnutls_pkcs7_set_crl, iFpp)
GO(gnutls_pkcs7_set_crl_raw, iFpbpu_)
GO(gnutls_pkcs7_set_crt, iFpp)
GO(gnutls_pkcs7_set_crt_raw, iFpbpu_)
GO(gnutls_pkcs7_sign, iFpppbpu_ppuu)
//GO(gnutls_pkcs7_signature_info_deinit, vFp)
GO(gnutls_pkcs7_verify, iFppbupu_uubpu_u)
GO(gnutls_pkcs7_verify_direct, iFppubpu_u)
GO(gnutls_pkcs8_info, iFbpu_upppppbp_)
GO(gnutls_pkcs_schema_get_name, pFu)
GO(gnutls_pkcs_schema_get_oid, pFu)
GO(gnutls_pk_get_id, uFp)
GO(gnutls_pk_get_name, pFu)
GO(gnutls_pk_get_oid, pFu)
GO(gnutls_pk_list, pFv)
GO(gnutls_pk_to_sign, uFuu)
GO(gnutls_prf, iFpLpiLpLp)
GO(gnutls_prf_raw, iFpLpLpLp)
GO(gnutls_prf_rfc5705, iFpLpLpLp)
GO(gnutls_priority_certificate_type_list, iFpbp_)
GO(gnutls_priority_cipher_list, iFpbp_)
GO(gnutls_priority_compression_list, iFpbp_)
GO(gnutls_priority_deinit, vFp)
GO(gnutls_priority_ecc_curve_list, iFpbp_)
GO(gnutls_priority_get_cipher_suite_index, iFpup)
GO(gnutls_priority_init, iFbp_pbp_)
GO(gnutls_priority_kx_list, iFpbp_)
GO(gnutls_priority_mac_list, iFpbp_)
GO(gnutls_priority_protocol_list, iFpbp_)
GO(gnutls_priority_set, iFpp)
GO(gnutls_priority_set_direct, iFppbp_)
GO(gnutls_priority_sign_list, iFpbp_)
GO(gnutls_priority_string_list, pFuu)
GO(gnutls_privkey_decrypt_data, iFpubpu_bpu_)
GO(gnutls_privkey_deinit, vFp)
GO(gnutls_privkey_derive_secret, iFppbpu_bpu_u)
GO(gnutls_privkey_export_dsa_raw, iFpbpu_bpu_bpu_bpu_bpu_)
GO(gnutls_privkey_export_ecc_raw, iFppbpu_bpu_bpu_)
GO(gnutls_privkey_export_openpgp, iFpbp_)
GO(gnutls_privkey_export_pkcs11, iFpbp_)
GO(gnutls_privkey_export_rsa_raw, iFpbpu_bpu_bpu_bpu_bpu_bpu_bpu_bpu_)
GO(gnutls_privkey_export_x509, iFpbp_)
GO(gnutls_privkey_generate, iFpuuu)
GO(gnutls_privkey_generate2, iFpuuubupu_u)
GO(gnutls_privkey_get_pk_algorithm, iFpp)
GO(gnutls_privkey_get_seed, iFpppbL_)
GO(gnutls_privkey_get_type, uFp)
GO(gnutls_privkey_import_dh_raw, iFppbpu_bpu_)
GO(gnutls_privkey_import_dsa_raw, iFpbpu_bpu_bpu_bpu_bpu_)
GO(gnutls_privkey_import_ecc_raw, iFpubpu_bpu_bpu_)
//GOM(gnutls_privkey_import_ext, iFEpupppu)
//GOM(gnutls_privkey_import_ext2, iFEpuppppu)
//GOM(gnutls_privkey_import_ext3, iFEppppppu)
GO(gnutls_privkey_import_openpgp, iFppu)
GO(gnutls_privkey_import_openpgp_raw, iFpbpu_upp)
GO(gnutls_privkey_import_pkcs11, iFppu)
GO(gnutls_privkey_import_rsa_raw, iFpbpu_bpu_bpu_bpu_bpu_bpu_bpu_bpu_)
GO(gnutls_privkey_import_tpm_raw, iFpbpu_uppu)
GO(gnutls_privkey_import_tpm_url, iFppppu)
GO(gnutls_privkey_import_url, iFppu)
GO(gnutls_privkey_import_x509, iFppu)
GO(gnutls_privkey_import_x509_raw, iFpbpu_upu)
GO(gnutls_privkey_init, iFbp_)
GO(gnutls_privkey_set_flags, vFpu)
//GOM(gnutls_privkey_set_pin_function, vFEppp)
GO(gnutls_privkey_set_spki, iFppu)
GO(gnutls_privkey_sign_data, iFpuubpu_bpu_)
GO(gnutls_privkey_sign_hash, iFpuubpu_bpu_)
GO(gnutls_privkey_status, iFp)
GO(gnutls_privkey_verify_params, iFp)
GO(gnutls_privkey_verify_seed, iFpupL)
GO(gnutls_protocol_get_id, uFp)
GO(gnutls_protocol_get_name, pFu)
GO(gnutls_protocol_get_version, uFp)
GO(gnutls_protocol_list, pFv)
GO(gnutls_psk_allocate_client_credentials, iFbp_)
GO(gnutls_psk_allocate_server_credentials, iFbp_)
GO(gnutls_psk_client_get_hint, pFp)
GO(gnutls_psk_free_client_credentials, vFp)
GO(gnutls_psk_free_server_credentials, vFp)
GO(gnutls_psk_server_get_username, pFp)
GO(gnutls_psk_set_client_credentials, iFppbpu_u)
//GOM(gnutls_psk_set_client_credentials_function, vFEpp)
//GOM(gnutls_psk_set_params_function, vFEpp)
GO(gnutls_psk_set_server_credentials_file, iFpp)
//GOM(gnutls_psk_set_server_credentials_function, vFEpp)
GO(gnutls_psk_set_server_credentials_hint, iFpp)
GO(gnutls_psk_set_server_dh_params, vFpp)
GO(gnutls_psk_set_server_known_dh_params, iFpu)
//GOM(gnutls_psk_set_server_params_function, vFEpp)
GO(gnutls_pubkey_deinit, vFp)
GO(gnutls_pubkey_encrypt_data, iFpubpu_bpu_)
GO(gnutls_pubkey_export, iFpupbL_)
GO(gnutls_pubkey_export2, iFpubpu_)
GO(gnutls_pubkey_export_dsa_raw, iFpbpu_bpu_bpu_bpu_)
GO(gnutls_pubkey_export_dh_raw, iFppbpu_u)
GO(gnutls_pubkey_export_ecc_raw, iFppbpu_bpu_)
GO(gnutls_pubkey_export_ecc_x962, iFpbpu_bpu_)
GO(gnutls_pubkey_export_rsa_raw, iFpbpu_bpu_)
GO(gnutls_pubkey_get_key_id, iFpupbL_)
GO(gnutls_pubkey_get_key_usage, iFpp)
GO(gnutls_pubkey_get_openpgp_key_id, iFpupbL_p)
GO(gnutls_pubkey_get_pk_algorithm, iFpp)
GO(gnutls_pubkey_get_preferred_hash_algorithm, iFppp)
GO(gnutls_pubkey_import, iFpbpu_u)
GO(gnutls_pubkey_import_dh_raw, iFppbpu_)
GO(gnutls_pubkey_import_dsa_raw, iFpbpu_bpu_bpu_bpu_)
GO(gnutls_pubkey_import_ecc_raw, iFpubpu_bpu_)
GO(gnutls_pubkey_import_ecc_x962, iFpbpu_bpu_)
GO(gnutls_pubkey_import_openpgp, iFppu)
GO(gnutls_pubkey_import_openpgp_raw, iFpbpu_upu)
GO(gnutls_pubkey_import_pkcs11, iFppu)
GO(gnutls_pubkey_import_privkey, iFppuu)
GO(gnutls_pubkey_import_rsa_raw, iFpbpu_bpu_)
GO(gnutls_pubkey_import_tpm_raw, iFpbpu_upu)
GO(gnutls_pubkey_import_tpm_url, iFpppu)
GO(gnutls_pubkey_import_url, iFppu)
GO(gnutls_pubkey_import_x509, iFppu)
GO(gnutls_pubkey_import_x509_crq, iFppu)
GO(gnutls_pubkey_import_x509_raw, iFpbpu_uu)
GO(gnutls_pubkey_init, iFbp_)
GO(gnutls_pubkey_print, iFpubpu_)
GO(gnutls_pubkey_set_key_usage, iFpu)
//GOM(gnutls_pubkey_set_pin_function, vFEppp)
GO(gnutls_pubkey_set_spki, iFppu)
GO(gnutls_pubkey_verify_data2, iFpuubpu_bpu_)
GO(gnutls_pubkey_verify_hash2, iFpuubpu_bpu_)
GO(gnutls_pubkey_verify_params, iFp)
GO(gnutls_random_art, iFupupLbpu_)
GO(gnutls_range_split, iFpbLL_bLL_bLL_)
GO(gnutls_record_can_use_length_hiding, uFp)
GO(gnutls_record_check_corked, LFp)
GO(gnutls_record_check_pending, LFp)
GO(gnutls_record_cork, vFp)
GO(gnutls_record_disable_padding, vFp)
GO(gnutls_record_discard_queued, LFp)
GO(gnutls_record_get_direction, iFp)
GO(gnutls_record_get_discarded, uFp)
GO(gnutls_record_get_max_size, LFp)
GO(gnutls_record_get_state, iFpubpu_bpu_bpu_p)
GO(gnutls_record_overhead_size, LFp)
GO(gnutls_record_recv, lFppL)
GO(gnutls_record_recv_packet, lFpbp_)
GO(gnutls_record_recv_seq, lFppLp)
GO(gnutls_record_send, lFppL)
GO(gnutls_record_send_range, lFppLbLL_)
//GO(_gnutls_record_set_default_version, 
GO(gnutls_record_set_max_size, lFpL)
GO(gnutls_record_set_state, iFpup)
GO(gnutls_record_set_timeout, vFpu)
GO(gnutls_record_uncork, iFpu)
//GO(gnutls_register_custom_url, 
GO(gnutls_rehandshake, iFp)
//GO(_gnutls_resolve_priorities, 
GO(gnutls_rnd, iFupL)
GO(gnutls_rnd_refresh, vFv)
//GO(_gnutls_rsa_pms_set_version, 
GO(gnutls_safe_renegotiation_status, uFp)
GO(gnutls_sec_param_get_name, pFu)
GO(gnutls_sec_param_to_pk_bits, uFuu)
GO(gnutls_sec_param_to_symmetric_bits, uFu)
GO(gnutls_server_name_get, iFppbL_pu)
GO(gnutls_server_name_set, iFpupL)
//GO(_gnutls_server_name_set_raw, 
GO(gnutls_session_channel_binding, iFpubpu_)
GO(gnutls_session_enable_compatibility_mode, vFp)
GO(gnutls_session_etm_status, uFp)
GO(gnutls_session_ext_master_secret_status, uFp)
//GOM(gnutls_session_ext_register, iFEppiupppppu)
GO(gnutls_session_force_valid, vFp)
GO(gnutls_session_get_data, iFppbL_)
GO(gnutls_session_get_data2, iFpbpu_)
GO(gnutls_session_get_desc, pFp)
GO(gnutls_session_get_flags, uFp)
GO(gnutls_session_get_id, iFppbL_)
GO(gnutls_session_get_id2, iFpbpu_)
GO(gnutls_session_get_master_secret, vFpbpu_)
GO(gnutls_session_get_ptr, pFp)
GO(gnutls_session_get_random, vFpbpu_bpu_)
GO(gnutls_session_get_verify_cert_status, uFp)
GO(gnutls_session_is_resumed, iFp)
GO(gnutls_session_resumption_requested, iFp)
GO(gnutls_session_set_data, iFppL)
GO(gnutls_session_set_id, iFpbpu_)
GO(gnutls_session_set_premaster, iFpuuuuuubpu_bpu_)
GO(gnutls_session_set_ptr, vFpp)
GO(gnutls_session_set_verify_cert, vFppu)
GO(gnutls_session_set_verify_cert2, vFpbupu_uu)
//GOM(gnutls_session_set_verify_function, vFEpp)
//GOM(gnutls_session_supplemental_register, iFEppuppu)
GO(gnutls_session_ticket_enable_client, iFp)
GO(gnutls_session_ticket_enable_server, iFpbpu_)
GO(gnutls_session_ticket_key_generate, iFbpu_)
GO(gnutls_set_default_priority, iFp)
GO(gnutls_sign_algorithm_get, iFp)
GO(gnutls_sign_algorithm_get_client, iFp)
GO(gnutls_sign_algorithm_get_requested, iFpLp)
GO(gnutls_sign_get_hash_algorithm, uFu)
GO(gnutls_sign_get_id, uFp)
GO(gnutls_sign_get_name, pFu)
GO(gnutls_sign_get_oid, pFu)
GO(gnutls_sign_get_pk_algorithm, uFu)
GO(gnutls_sign_is_secure, uFu)
GO(gnutls_sign_list, pFv)
GO(gnutls_srp_allocate_client_credentials, iFbp_)
GO(gnutls_srp_allocate_server_credentials, iFbp_)
GO(gnutls_srp_base64_decode, iFbpu_pbL_)
GO(gnutls_srp_base64_decode2, iFbpu_bpu_)
GO(gnutls_srp_base64_encode, iFbpu_pbL_)
GO(gnutls_srp_base64_encode2, iFbpu_bpu_)
GO(gnutls_srp_free_client_credentials, vFp)
GO(gnutls_srp_free_server_credentials, vFp)
GO(gnutls_srp_server_get_username, pFp)
GO(gnutls_srp_set_client_credentials, iFppp)
//GOM(gnutls_srp_set_client_credentials_function, vFEpp)
GO(gnutls_srp_set_prime_bits, vFpu)
GO(gnutls_srp_set_server_credentials_file, iFppp)
//GOM(gnutls_srp_set_server_credentials_function, vFEpp)
GO(gnutls_srp_set_server_fake_salt_seed, vFpbpu_u)
GO(gnutls_srp_verifier, iFppbpu_bpu_bpu_bpu_)
GO(gnutls_srtp_get_keys, iFppubpu_bpu_bpu_bpu_)
GO(gnutls_srtp_get_mki, iFpbpu_)
GO(gnutls_srtp_get_profile_id, iFpp)
GO(gnutls_srtp_get_profile_name, pFu)
GO(gnutls_srtp_get_selected_profile, iFpp)
GO(gnutls_srtp_set_mki, iFpbpu_)
GO(gnutls_srtp_set_profile, iFpu)
GO(gnutls_srtp_set_profile_direct, iFppbp_)
GO(gnutls_store_commitment, iFppppubpu_Iu)
GO(gnutls_store_pubkey, iFppppubpu_Iu)
GO(gnutls_strerror, pFi)
GO(gnutls_strerror_name, pFi)
//GO(gnutls_subject_alt_names_deinit, 
//GO(gnutls_subject_alt_names_get, 
//GO(gnutls_subject_alt_names_init, 
//GO(gnutls_subject_alt_names_set, 
GO(gnutls_supplemental_get_name, pFu)
GO(gnutls_supplemental_recv, vFpu)
//GOM(gnutls_supplemental_register, iFEpupp)
GO(gnutls_supplemental_send, vFpu)
//GO(gnutls_system_key_add_x509, 
//GO(gnutls_system_key_delete, 
//GO(gnutls_system_key_iter_deinit, 
//GO(gnutls_system_key_iter_get_info, 
GO(gnutls_system_recv_timeout, iFpu)
GO(gnutls_tdb_deinit, vFp)
GO(gnutls_tdb_init, iFbp_)
//GOM(gnutls_tdb_set_store_commitment_func, vFEpp)
//GOM(gnutls_tdb_set_store_func, vFEpp)
//GOM(gnutls_tdb_set_verify_func, vFEpp)
GO(gnutls_tpm_get_registered, iFbp_)
GO(gnutls_tpm_key_list_deinit, vFp)
GO(gnutls_tpm_key_list_get_url, iFpubp_u)
GO(gnutls_tpm_privkey_delete, iFpp)
GO(gnutls_tpm_privkey_generate, iFuuppuubpu_bpu_u)
GO(gnutls_transport_get_int, iFp)
GO(gnutls_transport_get_int2, vFppp)
GO(gnutls_transport_get_ptr, pFp)
GO(gnutls_transport_get_ptr2, vFpbp_bp_)
GO(gnutls_transport_set_errno, vFpi)
//GOM(gnutls_transport_set_errno_function, vFEpp)
//GO(gnutls_transport_set_fastopen, 
GO(gnutls_transport_set_int2, vFpii)
GO(gnutls_transport_set_ptr, vFpp)
GO(gnutls_transport_set_ptr2, vFppp)
GOM(gnutls_transport_set_pull_function, vFEpp)
GOM(gnutls_transport_set_pull_timeout_function, vFEpp)
GOM(gnutls_transport_set_push_function, vFEpp)
//GOM(gnutls_transport_set_vec_push_function, vFEpp)
//GO(_gnutls_ucs2_to_utf8, 
GO(gnutls_url_is_supported, uFp)
GO(gnutls_utf8_password_normalize, iFpubpu_u)
//GO(_gnutls_utf8_to_ucs2, 
GO(gnutls_verify_stored_pubkey, iFppppubpu_u)
//GO(gnutls_x509_aia_deinit, 
//GO(gnutls_x509_aia_get, 
//GO(gnutls_x509_aia_init, 
//GO(gnutls_x509_aia_set, 
//GO(gnutls_x509_aki_deinit, 
//GO(gnutls_x509_aki_get_cert_issuer, 
//GO(gnutls_x509_aki_get_id, 
//GO(gnutls_x509_aki_init, 
//GO(gnutls_x509_aki_set_cert_issuer, 
//GO(gnutls_x509_aki_set_id, 
GO(gnutls_x509_cidr_to_rfc5280, iFpbpu_)
GO(gnutls_x509_crl_check_issuer, uFpp)
GO(gnutls_x509_crl_deinit, vFp)
//GO(gnutls_x509_crl_dist_points_deinit, 
//GO(gnutls_x509_crl_dist_points_get, 
//GO(gnutls_x509_crl_dist_points_init, 
//GO(gnutls_x509_crl_dist_points_set, 
GO(gnutls_x509_crl_export, iFpupbL_)
GO(gnutls_x509_crl_export2, iFpubpu_)
GO(gnutls_x509_crl_get_authority_key_gn_serial, iFpupbL_ppbL_p)
GO(gnutls_x509_crl_get_authority_key_id, iFppbL_p)
GO(gnutls_x509_crl_get_crt_count, iFp)
GO(gnutls_x509_crl_get_crt_serial, iFpuppp) // Warning: failed to confirm
GO(gnutls_x509_crl_get_dn_oid, iFpupbL_)
GO(gnutls_x509_crl_get_extension_data, iFpupbL_)
GO(gnutls_x509_crl_get_extension_data2, iFpubpu_)
GO(gnutls_x509_crl_get_extension_info, iFpupbL_p)
GO(gnutls_x509_crl_get_extension_oid, iFpupbL_)
GO(gnutls_x509_crl_get_issuer_dn, iFppbL_)
GO(gnutls_x509_crl_get_issuer_dn2, iFpbpu_)
GO(gnutls_x509_crl_get_issuer_dn3, iFpbpu_u)
GO(gnutls_x509_crl_get_issuer_dn_by_oid, iFppuupbL_)
GO(gnutls_x509_crl_get_next_update, IFp)
GO(gnutls_x509_crl_get_number, iFppbL_p)
GO(gnutls_x509_crl_get_raw_issuer_dn, iFpbpu_)
GO(gnutls_x509_crl_get_signature, iFppbL_)
GO(gnutls_x509_crl_get_signature_algorithm, iFp)
GO(gnutls_x509_crl_get_signature_oid, iFppbL_)
GO(gnutls_x509_crl_get_this_update, IFp)
GO(gnutls_x509_crl_get_version, iFp)
GO(gnutls_x509_crl_import, iFpbpu_u)
GO(gnutls_x509_crl_init, iFbp_)
GO(gnutls_x509_crl_iter_crt_serial, iFppppp) // Warning: failed to confirm
GO(gnutls_x509_crl_iter_deinit, vFp)
GO(gnutls_x509_crl_list_import, iFbp_pbpu_uu)
//GO(gnutls_x509_crl_list_import2, iFbbp__pbpu_uu)
GO(gnutls_x509_crl_print, iFpubpu_)
GO(gnutls_x509_crl_privkey_sign, iFpppuu)
GO(gnutls_x509_crl_set_authority_key_id, iFppL)
GO(gnutls_x509_crl_set_crt, iFppI)
GO(gnutls_x509_crl_set_crt_serial, iFppLI)
GO(gnutls_x509_crl_set_next_update, iFpI)
GO(gnutls_x509_crl_set_number, iFppL)
GO(gnutls_x509_crl_set_this_update, iFpI)
GO(gnutls_x509_crl_set_version, iFpu)
GO(gnutls_x509_crl_sign, iFppp)
GO(gnutls_x509_crl_sign2, iFpppuu)
GO(gnutls_x509_crl_verify, iFpbp_uup)
GO(gnutls_x509_crq_deinit, vFp)
GO(gnutls_x509_crq_export, iFpupbL_)
GO(gnutls_x509_crq_export2, iFpubpu_)
GO(gnutls_x509_crq_get_attribute_by_oid, iFppupbL_)
GO(gnutls_x509_crq_get_attribute_data, iFpupbL_)
GO(gnutls_x509_crq_get_attribute_info, iFpupbL_)
GO(gnutls_x509_crq_get_basic_constraints, iFpppp)
GO(gnutls_x509_crq_get_challenge_password, iFppbL_)
GO(gnutls_x509_crq_get_dn, iFppbL_)
GO(gnutls_x509_crq_get_dn2, iFpbpu_)
GO(gnutls_x509_crq_get_dn3, iFpbpu_u)
GO(gnutls_x509_crq_get_dn_by_oid, iFppuupbL_)
GO(gnutls_x509_crq_get_dn_oid, iFpupbL_)
GO(gnutls_x509_crq_get_extension_by_oid, iFppupbL_p)
GO(gnutls_x509_crq_get_extension_by_oid2, iFppubpu_p)
GO(gnutls_x509_crq_get_extension_data, iFpupbL_)
GO(gnutls_x509_crq_get_extension_data2, iFpubpu_)
GO(gnutls_x509_crq_get_extension_info, iFpupbL_p)
GO(gnutls_x509_crq_get_key_id, iFpupbL_)
GO(gnutls_x509_crq_get_key_purpose_oid, iFpupbL_p)
GO(gnutls_x509_crq_get_key_rsa_raw, iFpbpu_bpu_)
GO(gnutls_x509_crq_get_key_usage, iFppp)
GO(gnutls_x509_crq_get_pk_algorithm, iFpp)
GO(gnutls_x509_crq_get_pk_oid, iFppbL_)
GO(gnutls_x509_crq_get_private_key_usage_period, iFpppp) // Warning: failed to confirm
GO(gnutls_x509_crq_get_signature_algorithm, iFp)
GO(gnutls_x509_crq_get_signature_oid, iFppbL_)
GO(gnutls_x509_crq_get_subject_alt_name, iFpupbL_pp)
GO(gnutls_x509_crq_get_subject_alt_othername_oid, iFpupbL_)
GO(gnutls_x509_crq_get_tlsfeatures, iFppup)
GO(gnutls_x509_crq_get_version, iFp)
GO(gnutls_x509_crq_import, iFpbpu_u)
GO(gnutls_x509_crq_init, iFbp_)
GO(gnutls_x509_crq_print, iFpubpu_)
GO(gnutls_x509_crq_privkey_sign, iFppuu)
GO(gnutls_x509_crq_set_attribute_by_oid, iFpppL)
GO(gnutls_x509_crq_set_basic_constraints, iFpui)
GO(gnutls_x509_crq_set_challenge_password, iFpp)
GO(gnutls_x509_crq_set_dn, iFppbp_)
GO(gnutls_x509_crq_set_dn_by_oid, iFppupu)
GO(gnutls_x509_crq_set_extension_by_oid, iFpppLu)
GO(gnutls_x509_crq_set_key, iFpp)
GO(gnutls_x509_crq_set_key_purpose_oid, iFppu)
GO(gnutls_x509_crq_set_key_rsa_raw, iFpbpu_bpu_)
GO(gnutls_x509_crq_set_key_usage, iFpu)
GO(gnutls_x509_crq_set_private_key_usage_period, iFpII)
GO(gnutls_x509_crq_set_pubkey, iFpp)
GO(gnutls_x509_crq_set_subject_alt_name, iFpupuu)
GO(gnutls_x509_crq_set_subject_alt_othername, iFpppuu)
GO(gnutls_x509_crq_set_tlsfeatures, iFpp)
GO(gnutls_x509_crq_set_version, iFpu)
GO(gnutls_x509_crq_sign, iFpp)
GO(gnutls_x509_crq_sign2, iFppuu)
GO(gnutls_x509_crq_verify, iFpu)
GO(gnutls_x509_crt_check_email, uFppu)
GO(gnutls_x509_crt_check_hostname, uFpp)
GO(gnutls_x509_crt_check_hostname2, uFppu)
GO(gnutls_x509_crt_check_issuer, uFpp)
GO(gnutls_x509_crt_check_key_purpose, uFppu)
GO(gnutls_x509_crt_check_revocation, iFpbp_u)
GO(gnutls_x509_crt_cpy_crl_dist_points, iFpp)
GO(gnutls_x509_crt_deinit, vFp)
GO(gnutls_x509_crt_equals, uFpp)
GO(gnutls_x509_crt_equals2, uFpbpu_)
GO(gnutls_x509_crt_export, iFpupbL_)
GO(gnutls_x509_crt_export2, iFpubpu_)
GO(gnutls_x509_crt_get_activation_time, IFp)
GO(gnutls_x509_crt_get_authority_info_access, iFpuibpu_p)
GO(gnutls_x509_crt_get_authority_key_gn_serial, iFpupbL_ppbL_p)
GO(gnutls_x509_crt_get_authority_key_id, iFppbL_p)
GO(gnutls_x509_crt_get_basic_constraints, iFpppp)
GO(gnutls_x509_crt_get_ca_status, iFpp)
GO(gnutls_x509_crt_get_crl_dist_points, iFpupbL_pp)
GO(gnutls_x509_crt_get_dn, iFppbL_)
GO(gnutls_x509_crt_get_dn2, iFpbpu_)
GO(gnutls_x509_crt_get_dn3, iFpbpu_u)
GO(gnutls_x509_crt_get_dn_by_oid, iFppuupbL_)
GO(gnutls_x509_crt_get_dn_oid, iFpupbL_)
GO(gnutls_x509_crt_get_expiration_time, IFp)
GO(gnutls_x509_crt_get_extension_by_oid, iFppupbL_p)
GO(gnutls_x509_crt_get_extension_by_oid2, iFppubpu_p)
GO(gnutls_x509_crt_get_extension_data, iFpupbL_)
GO(gnutls_x509_crt_get_extension_data2, iFpubpu_)
GO(gnutls_x509_crt_get_extension_info, iFpupbL_p)
GO(gnutls_x509_crt_get_extension_oid, iFpupbL_)
GO(gnutls_x509_crt_get_fingerprint, iFpupbL_)
GO(gnutls_x509_crt_get_issuer, iFpbp_)
GO(gnutls_x509_crt_get_issuer_alt_name, iFpupbL_p)
GO(gnutls_x509_crt_get_issuer_alt_name2, iFpupbL_pp)
GO(gnutls_x509_crt_get_issuer_alt_othername_oid, iFpupbL_)
GO(gnutls_x509_crt_get_issuer_dn, iFppbL_)
GO(gnutls_x509_crt_get_issuer_dn2, iFpbpu_)
GO(gnutls_x509_crt_get_issuer_dn3, iFpbpu_u)
GO(gnutls_x509_crt_get_issuer_dn_by_oid, iFppuupbL_)
GO(gnutls_x509_crt_get_issuer_dn_oid, iFpupbL_)
GO(gnutls_x509_crt_get_issuer_unique_id, iFppbL_)
GO(gnutls_x509_crt_get_key_id, iFpupbL_)
GO(gnutls_x509_crt_get_key_purpose_oid, iFpupbL_p)
GO(gnutls_x509_crt_get_key_usage, iFppp)
GO(gnutls_x509_crt_get_name_constraints, iFppup)
GO(gnutls_x509_crt_get_pk_algorithm, iFpp)
GO(gnutls_x509_crt_get_pk_dsa_raw, iFpbpu_bpu_bpu_bpu_)
GO(gnutls_x509_crt_get_pk_ecc_raw, iFppbpu_bpu_)
GO(gnutls_x509_crt_get_pk_oid, iFppbL_)
GO(gnutls_x509_crt_get_pk_rsa_raw, iFpbpu_bpu_)
GO(gnutls_x509_crt_get_policy, iFpupp) // Warning: failed to confirm
GO(gnutls_x509_crt_get_preferred_hash_algorithm, iFppp)
GO(gnutls_x509_crt_get_private_key_usage_period, iFpppp) // Warning: failed to confirm
GO(gnutls_x509_crt_get_proxy, iFpppbp_bp_bL_)
GO(gnutls_x509_crt_get_raw_dn, iFpbpu_)
GO(gnutls_x509_crt_get_raw_issuer_dn, iFpbpu_)
GO(gnutls_x509_crt_get_serial, iFppbL_)
GO(gnutls_x509_crt_get_signature, iFppbL_)
GO(gnutls_x509_crt_get_signature_algorithm, iFp)
GO(gnutls_x509_crt_get_signature_oid, iFppbL_)
GO(gnutls_x509_crt_get_subject, iFpbp_)
GO(gnutls_x509_crt_get_subject_alt_name, iFpupbL_p)
GO(gnutls_x509_crt_get_subject_alt_name2, iFpupbL_pp)
GO(gnutls_x509_crt_get_subject_alt_othername_oid, iFpupbL_)
GO(gnutls_x509_crt_get_subject_key_id, iFppbL_p)
GO(gnutls_x509_crt_get_subject_unique_id, iFppbL_)
GO(gnutls_x509_crt_get_tlsfeatures, iFppup)
GO(gnutls_x509_crt_get_version, iFp)
GO(gnutls_x509_crt_import, iFpbpu_u)
GO(gnutls_x509_crt_import_pkcs11, iFpp)
GO(gnutls_x509_crt_import_url, iFppu)
GO(gnutls_x509_crt_init, iFbp_)
GO(gnutls_x509_crt_list_import, iFbp_pbpu_uu)
//GO(gnutls_x509_crt_list_import2, iFbbp__pbpu_uu)
GO(gnutls_x509_crt_list_import_pkcs11, iFbp_urp_u)
GO(gnutls_x509_crt_list_verify, iFbp_ubp_ubp_uup)
GO(gnutls_x509_crt_print, iFpubpu_)
GO(gnutls_x509_crt_privkey_sign, iFpppuu)
GO(gnutls_x509_crt_set_activation_time, iFpI)
GO(gnutls_x509_crt_set_authority_info_access, iFpibpu_)
GO(gnutls_x509_crt_set_authority_key_id, iFppL)
GO(gnutls_x509_crt_set_basic_constraints, iFpui)
GO(gnutls_x509_crt_set_ca_status, iFpu)
GO(gnutls_x509_crt_set_crl_dist_points, iFpupu)
GO(gnutls_x509_crt_set_crl_dist_points2, iFpupuu)
GO(gnutls_x509_crt_set_crq, iFpp)
GO(gnutls_x509_crt_set_crq_extension_by_oid, iFpppu)
GO(gnutls_x509_crt_set_crq_extensions, iFpp)
GO(gnutls_x509_crt_set_dn, iFppbp_)
GO(gnutls_x509_crt_set_dn_by_oid, iFppupu)
GO(gnutls_x509_crt_set_expiration_time, iFpI)
GO(gnutls_x509_crt_set_extension_by_oid, iFpppLu)
GO(gnutls_x509_crt_set_issuer_alt_name, iFpupuu)
GO(gnutls_x509_crt_set_issuer_alt_othername, iFpppuu)
GO(gnutls_x509_crt_set_issuer_dn, iFppbp_)
GO(gnutls_x509_crt_set_issuer_dn_by_oid, iFppupu)
GO(gnutls_x509_crt_set_issuer_unique_id, iFppL)
GO(gnutls_x509_crt_set_key, iFpp)
GO(gnutls_x509_crt_set_key_purpose_oid, iFppu)
GO(gnutls_x509_crt_set_key_usage, iFpu)
GO(gnutls_x509_crt_set_name_constraints, iFppu)
//GOM(gnutls_x509_crt_set_pin_function, vFEppp)
GO(gnutls_x509_crt_set_policy, iFppu) // Warning: failed to confirm
GO(gnutls_x509_crt_set_private_key_usage_period, iFpII)
GO(gnutls_x509_crt_set_proxy, iFpippL)
GO(gnutls_x509_crt_set_proxy_dn, iFppupu)
GO(gnutls_x509_crt_set_pubkey, iFpp)
GO(gnutls_x509_crt_set_serial, iFppL)
GO(gnutls_x509_crt_set_subject_alternative_name, iFpup)
GO(gnutls_x509_crt_set_subject_alt_name, iFpupuu)
GO(gnutls_x509_crt_set_subject_alt_othername, iFpppuu)
GO(gnutls_x509_crt_set_subject_key_id, iFppL)
GO(gnutls_x509_crt_set_subject_unique_id, iFppL)
GO(gnutls_x509_crt_set_tlsfeatures, iFpp)
GO(gnutls_x509_crt_set_version, iFpu)
GO(gnutls_x509_crt_sign, iFppp)
GO(gnutls_x509_crt_sign2, iFpppuu)
GO(gnutls_x509_crt_verify, iFpbp_uup)
GO(gnutls_x509_crt_verify_data2, iFpuubpu_bpu_)
GO(gnutls_x509_dn_deinit, vFp)
GO(gnutls_x509_dn_export, iFpupbL_)
GO(gnutls_x509_dn_export2, iFpubpu_)
GO(gnutls_x509_dn_get_rdn_ava, iFpiip) // Warning: failed to confirm
GO(gnutls_x509_dn_get_str, iFpbpu_)
GO(gnutls_x509_dn_get_str2, iFpbpu_u)
GO(gnutls_x509_dn_import, iFpbpu_)
GO(gnutls_x509_dn_init, iFbp_)
GO(gnutls_x509_dn_oid_known, iFp)
GO(gnutls_x509_dn_oid_name, pFpu)
GO(gnutls_x509_dn_set_str, iFppbp_)
GO(gnutls_x509_ext_deinit, vFp) // Warning: failed to confirm
//GO(gnutls_x509_ext_export_aia, 
//GO(gnutls_x509_ext_export_authority_key_id, 
//GO(gnutls_x509_ext_export_basic_constraints, 
//GO(gnutls_x509_ext_export_crl_dist_points, 
//GO(gnutls_x509_ext_export_key_purposes, 
//GO(gnutls_x509_ext_export_key_usage, 
//GO(gnutls_x509_ext_export_name_constraints, 
//GO(gnutls_x509_ext_export_policies, 
//GO(gnutls_x509_ext_export_private_key_usage_period, 
//GO(gnutls_x509_ext_export_proxy, 
//GO(gnutls_x509_ext_export_subject_alt_names, 
//GO(gnutls_x509_ext_export_subject_key_id, 
//GO(gnutls_x509_ext_export_tlsfeatures, 
//GO(gnutls_x509_ext_import_aia, 
//GO(gnutls_x509_ext_import_authority_key_id, 
//GO(gnutls_x509_ext_import_basic_constraints, 
//GO(gnutls_x509_ext_import_crl_dist_points, 
//GO(gnutls_x509_ext_import_key_purposes, 
//GO(gnutls_x509_ext_import_key_usage, 
//GO(gnutls_x509_ext_import_name_constraints, 
//GO(gnutls_x509_ext_import_policies, 
//GO(gnutls_x509_ext_import_private_key_usage_period, 
//GO(gnutls_x509_ext_import_proxy, 
//GO(gnutls_x509_ext_import_subject_alt_names, 
//GO(gnutls_x509_ext_import_subject_key_id, 
//GO(gnutls_x509_ext_import_tlsfeatures, 
GO(gnutls_x509_ext_print, iFpuup) // Warning: failed to confirm
//GO(gnutls_x509_key_purpose_deinit, 
//GO(gnutls_x509_key_purpose_get, 
//GO(gnutls_x509_key_purpose_init, 
//GO(gnutls_x509_key_purpose_set, 
GO(gnutls_x509_name_constraints_add_excluded, iFpubpu_)
GO(gnutls_x509_name_constraints_add_permitted, iFpubpu_)
GO(gnutls_x509_name_constraints_check, uFpubpu_)
GO(gnutls_x509_name_constraints_check_crt, uFpup)
GO(gnutls_x509_name_constraints_deinit, vFp)
GO(gnutls_x509_name_constraints_get_excluded, iFpupbpu_)
GO(gnutls_x509_name_constraints_get_permitted, iFpupbpu_)
GO(gnutls_x509_name_constraints_init, iFbp_)
//GO(_gnutls_x509_name_constraints_merge, 
//GO(gnutls_x509_othername_to_virtual, 
//GO(gnutls_x509_policies_deinit, 
//GO(gnutls_x509_policies_get, 
//GO(gnutls_x509_policies_init, 
//GO(gnutls_x509_policies_set, 
GO(gnutls_x509_policy_release, vFp) // Warning: failed to confirm
GO(gnutls_x509_privkey_cpy, iFpp)
GO(gnutls_x509_privkey_deinit, vFp)
GO(gnutls_x509_privkey_export, iFpupbL_)
GO(gnutls_x509_privkey_export2, iFpubpu_)
GO(gnutls_x509_privkey_export2_pkcs8, iFpupubpu_)
GO(gnutls_x509_privkey_export_dsa_raw, iFpbpu_bpu_bpu_bpu_bpu_)
GO(gnutls_x509_privkey_export_ecc_raw, iFppbpu_bpu_bpu_)
GO(gnutls_x509_privkey_export_pkcs8, iFpupupbL_)
GO(gnutls_x509_privkey_export_rsa_raw, iFpbpu_bpu_bpu_bpu_bpu_bpu_)
GO(gnutls_x509_privkey_export_rsa_raw2, iFpbpu_bpu_bpu_bpu_bpu_bpu_bpu_bpu_)
GO(gnutls_x509_privkey_fix, iFp)
GO(gnutls_x509_privkey_generate, iFpuuu)
GO(gnutls_x509_privkey_generate2, iFpuuubupu_u)
GO(gnutls_x509_privkey_get_key_id, iFpupbL_)
GO(gnutls_x509_privkey_get_pk_algorithm, iFp)
GO(gnutls_x509_privkey_get_pk_algorithm2, iFpp)
GO(gnutls_x509_privkey_get_seed, iFpppbL_)
GO(gnutls_x509_privkey_import, iFpbpu_u)
GO(gnutls_x509_privkey_import2, iFpbpu_upu)
GO(gnutls_x509_privkey_import_dsa_raw, iFpbpu_bpu_bpu_bpu_bpu_)
GO(gnutls_x509_privkey_import_ecc_raw, iFpubpu_bpu_bpu_)
GO(gnutls_x509_privkey_import_openssl, iFpbpu_p)
GO(gnutls_x509_privkey_import_pkcs8, iFpbpu_upu)
GO(gnutls_x509_privkey_import_rsa_raw, iFpbpu_bpu_bpu_bpu_bpu_bpu_)
GO(gnutls_x509_privkey_import_rsa_raw2, iFpbpu_bpu_bpu_bpu_bpu_bpu_bpu_bpu_)
GO(gnutls_x509_privkey_init, iFbp_)
GO(gnutls_x509_privkey_sec_param, uFp)
GO(gnutls_x509_privkey_set_flags, vFpu)
//GOM(gnutls_x509_privkey_set_pin_function, vFEppp)
GO(gnutls_x509_privkey_sign_data, iFpuubpu_pbL_)
GO(gnutls_x509_privkey_sign_hash, iFpbpu_bpu_)
GO(gnutls_x509_privkey_verify_params, iFp)
GO(gnutls_x509_privkey_verify_seed, iFpupL)
GO(gnutls_x509_rdn_get, iFbpu_pbL_)
GO(gnutls_x509_rdn_get2, iFbpu_bpu_u)
GO(gnutls_x509_rdn_get_by_oid, iFbpu_puupbL_)
GO(gnutls_x509_rdn_get_oid, iFbpu_upbL_)
GO(gnutls_x509_spki_deinit, vFp)
GO(gnutls_x509_spki_init, iFbp_)
GO(gnutls_x509_spki_set_rsa_oaep_params, iFpubpu_)
GO(gnutls_x509_spki_set_rsa_pss_params, vFpuu)
//GO(gnutls_x509_tlsfeatures_add, 
GO(gnutls_x509_tlsfeatures_check_crt, uFpp)
GO(gnutls_x509_tlsfeatures_deinit, vFp)
GO(gnutls_x509_tlsfeatures_get, iFpup)
GO(gnutls_x509_tlsfeatures_init, iFbp_)
GO(gnutls_x509_trust_list_add_cas, iFpbp_uu)
GO(gnutls_x509_trust_list_add_crls, iFpbp_uuu)
GO(gnutls_x509_trust_list_add_named_crt, iFpppLu)
GO(gnutls_x509_trust_list_add_system_trust, iFpuu)
GO(gnutls_x509_trust_list_add_trust_dir, iFpppuuu)
GO(gnutls_x509_trust_list_add_trust_file, iFpppuuu)
GO(gnutls_x509_trust_list_add_trust_mem, iFpbpu_bpu_uuu)
GO(gnutls_x509_trust_list_deinit, vFpu)
GO(gnutls_x509_trust_list_get_issuer, iFppbp_u)
GO(gnutls_x509_trust_list_get_issuer_by_dn, iFpbpu_bp_u)
GO(gnutls_x509_trust_list_get_issuer_by_subject_key_id, iFpbpu_bpu_bp_u)
GO(gnutls_x509_trust_list_init, iFbp_u)
GO(gnutls_x509_trust_list_iter_deinit, vFp)
GO(gnutls_x509_trust_list_iter_get_ca, iFpbp_bp_)
GO(gnutls_x509_trust_list_remove_cas, iFpbp_u)
GO(gnutls_x509_trust_list_remove_trust_file, iFppu)
GO(gnutls_x509_trust_list_remove_trust_mem, iFpbpu_u)
//GOM(gnutls_x509_trust_list_verify_crt, iFEpbp_uupp)
//GOM(gnutls_x509_trust_list_verify_crt2, iFEpbp_ubupu_uupp)
//GOM(gnutls_x509_trust_list_verify_named_crt, iFEpppLupp)
//GO(_rsa_generate_fips186_4_keypair, 
