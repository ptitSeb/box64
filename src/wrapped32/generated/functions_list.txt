#() vFv -> vFv
#() vFi -> vFi
#() vFu -> vFu
#() vFp -> vFp
#() vFA -> vFA
#() vFS -> vFS
#() iFv -> iFv
#() iFi -> iFi
#() iFI -> iFI
#() iFu -> iFu
#() iFf -> iFf
#() iFd -> iFd
#() iFL -> iFL
#() iFp -> iFp
#() iFh -> iFh
#() iFS -> iFS
#() IFf -> IFf
#() IFd -> IFd
#() IFS -> IFS
#() uFv -> uFv
#() uFu -> uFu
#() uFU -> uFU
#() uFp -> uFp
#() UFp -> UFp
#() UFs -> UFs
#() fFf -> fFf
#() dFv -> dFv
#() dFd -> dFd
#() lFi -> lFi
#() lFp -> lFp
#() lFS -> lFS
#() LFv -> LFv
#() LFL -> LFL
#() LFp -> LFp
#() pFv -> pFv
#() pFi -> pFi
#() pFu -> pFu
#() pFL -> pFL
#() pFp -> pFp
#() hFv -> hFv
#() aFa -> aFa
#() tFi -> tFi
#() tFp -> tFp
#() LFrL_ -> LFB
#() pFrL_ -> pFB
#() LFriiiiiiiiilt_ -> LFB
#() vFEv -> vFEv
#() vFEp -> vFEp
#() iFEv -> iFEv
#() iFEi -> iFEi
#() iFEL -> iFEL
#() iFEp -> iFEp
#() iFEh -> iFEh
#() iFEO -> iFEO
#() iFii -> iFii
#() iFiI -> iFiI
#() iFiu -> iFiu
#() iFip -> iFip
#() iFia -> iFia
#() iFiS -> iFiS
#() iFui -> iFui
#() iFuu -> iFuu
#() iFup -> iFup
#() iFli -> iFli
#() iFpi -> iFpi
#() iFpu -> iFpu
#() iFpL -> iFpL
#() iFpp -> iFpp
#() iFpV -> iFpV
#() iFpS -> iFpS
#() iFhp -> iFhp
#() iFhh -> iFhh
#() IFII -> IFII
#() uFEu -> uFEu
#() uFEV -> uFEV
#() uFpa -> uFpa
#() UFii -> UFii
#() UFUU -> UFUU
#() UFss -> UFss
#() fFif -> fFif
#() fFfi -> fFfi
#() fFff -> fFff
#() fFfD -> fFfD
#() fFfp -> fFfp
#() dFid -> dFid
#() dFdi -> dFdi
#() dFdd -> dFdd
#() dFdD -> dFdD
#() dFdp -> dFdp
#() LFpL -> LFpL
#() LFpp -> LFpp
#() pFEv -> pFEv
#() pFEu -> pFEu
#() pFEp -> pFEp
#() pFia -> pFia
#() pFLL -> pFLL
#() pFpi -> pFpi
#() pFpL -> pFpL
#() pFpp -> pFpp
#() SFpp -> SFpp
#() tFip -> tFip
#() tFpL -> tFpL
#() iFEbp_ -> iFEB
#() iFHBp_ -> iFHB
#() fFpBp_ -> fFpB
#() dFpBp_ -> dFpB
#() pFrL_p -> pFBp
#() iFuBLL_ -> iFuB
#() iFprLL_ -> iFpB
#() iFBLL_p -> iFBp
#() iFrLL_BLL_ -> iFBB
#() pFriiiiiiiiilt_p -> pFBp
#() vFEip -> vFEip
#() vFEpi -> vFEpi
#() vFEpu -> vFEpu
#() vFfpp -> vFfpp
#() vFdpp -> vFdpp
#() vFppu -> vFppu
#() iFEip -> iFEip
#() iFEpi -> iFEpi
#() iFEpL -> iFEpL
#() iFEpp -> iFEpp
#() iFEpV -> iFEpV
#() iFEhi -> iFEhi
#() iFESp -> iFESp
#() iFiii -> iFiii
#() iFiiI -> iFiiI
#() iFiiu -> iFiiu
#() iFiip -> iFiip
#() iFiiO -> iFiiO
#() iFiII -> iFiII
#() iFiuu -> iFiuu
#() iFiLN -> iFiLN
#() iFipu -> iFipu
#() iFipL -> iFipL
#() iFipp -> iFipp
#() iFuii -> iFuii
#() iFuip -> iFuip
#() iFuui -> iFuui
#() iFuuu -> iFuuu
#() iFuLp -> iFuLp
#() iFupp -> iFupp
#() iFpiu -> iFpiu
#() iFpip -> iFpip
#() iFpuu -> iFpuu
#() iFpLi -> iFpLi
#() iFpLL -> iFpLL
#() iFppi -> iFppi
#() iFppu -> iFppu
#() iFppL -> iFppL
#() iFppp -> iFppp
#() iFppa -> iFppa
#() iFpOu -> iFpOu
#() iFhpL -> iFhpL
#() iFSIi -> iFSIi
#() iFSli -> iFSli
#() IFiIi -> IFiIi
#() fFfff -> fFfff
#() fFffp -> fFffp
#() fFppa -> fFppa
#() dFddd -> dFddd
#() dFddp -> dFddp
#() lFipL -> lFipL
#() lFlpi -> lFlpi
#() LFpip -> LFpip
#() pFEip -> pFEip
#() pFEpi -> pFEpi
#() pFEpp -> pFEpp
#() pFipi -> pFipi
#() pFpii -> pFpii
#() pFpiL -> pFpiL
#() pFpiS -> pFpiS
#() pFpuL -> pFpuL
#() pFppL -> pFppL
#() pFpOM -> pFpOM
#() aFipa -> aFipa
#() SFEpp -> SFEpp
#() SFppS -> SFppS
#() tFipu -> tFipu
#() iFpBp_i -> iFpBi
#() IFpBp_i -> IFpBi
#() UFpBp_i -> UFpBi
#() dFpBp_i -> dFpBi
#() dFpBp_a -> dFpBa
#() lFpBp_i -> lFpBi
#() LFpBp_i -> LFpBi
#() pFppriiiiiiiiilt_ -> pFppB
#() vFEipV -> vFEipV
#() vFEpup -> vFEpup
#() vFEppp -> vFEppp
#() vFppip -> vFppip
#() iFEiip -> iFEiip
#() iFEiiN -> iFEiiN
#() iFEipp -> iFEipp
#() iFEipV -> iFEipV
#() iFELup -> iFELup
#() iFEpip -> iFEpip
#() iFEpup -> iFEpup
#() iFEpLi -> iFEpLi
#() iFEppL -> iFEppL
#() iFEppp -> iFEppp
#() iFEppV -> iFEppV
#() iFEpOu -> iFEpOu
#() iFESpp -> iFESpp
#() iFESpV -> iFESpV
#() iFiiip -> iFiiip
#() iFiiiN -> iFiiiN
#() iFiill -> iFiill
#() iFiuui -> iFiuui
#() iFipii -> iFipii
#() iFipup -> iFipup
#() iFippi -> iFippi
#() iFuupi -> iFuupi
#() iFhpiL -> iFhpiL
#() lFEipi -> lFEipi
#() lFiipL -> lFiipL
#() lFipLi -> lFipLi
#() LFpLLS -> LFpLLS
#() LFppLp -> LFppLp
#() LFppLa -> LFppLa
#() pFEppi -> pFEppi
#() pFEppp -> pFEppp
#() pFpiLL -> pFpiLL
#() pFppLL -> pFppLL
#() IFpBp_ii -> IFpBii
#() UFpBp_ii -> UFpBii
#() lFiibp_L -> lFiiBL
#() LFpbp_Lp -> LFpBLp
#() iFEpprLL_ -> iFEppB
#() LFpLpriiiiiiiiilt_ -> LFpLpB
#() vFEpLLp -> vFEpLLp
#() iFEiiip -> iFEiiip
#() iFEipii -> iFEipii
#() iFEpupV -> iFEpupV
#() iFEpLpV -> iFEpLpV
#() iFEppiV -> iFEppiV
#() iFEpppi -> iFEpppi
#() iFEpppp -> iFEpppp
#() iFiiipu -> iFiiipu
#() iFiiipp -> iFiiipp
#() iFiLLLL -> iFiLLLL
#() iFipLLi -> iFipLLi
#() iFpppup -> iFpppup
#() uFpLLLS -> uFpLLLS
#() LFpLppa -> LFpLppa
#() iFEBh_ppp -> iFEBppp
#() LFpbp_LLp -> LFpBLLp
#() LFpBp_LLp -> LFpBLLp
#() iFippprLL_ -> iFipppB
#() LFLbp_bL_Bp_BL_ -> LFLBBBB
#() LFpLpriiiiiiiiilt_a -> LFpLpBa
#() iFEpippp -> iFEpippp
#() iFEpuppp -> iFEpuppp
#() iFEpLppp -> iFEpLppp
#() lFipLipu -> lFipLipu
#() lFipLipp -> lFipLipp
#() pFEpLLiN -> pFEpLLiN
#() iFEpLiipV -> iFEpLiipV
#() iFpupLpLi -> iFpupLpLi
#() pFEpLiiii -> pFEpLiiii
#() pFEpLiiiI -> pFEpLiiiI
#() iFEpippppp -> iFEpippppp
#defined(ANDROID) vFEpppp -> vFEpppp
#defined(HAVE_LD80BITS) DFD -> DFD
#defined(HAVE_LD80BITS) DFDD -> DFDD
#defined(HAVE_LD80BITS) DFDp -> DFDp
#defined(HAVE_LD80BITS) DFpBp_a -> DFpBa
#!defined(HAVE_LD80BITS) KFK -> KFK
#!defined(HAVE_LD80BITS) KFKK -> KFKK
#!defined(HAVE_LD80BITS) KFKp -> KFKp
#!defined(HAVE_LD80BITS) KFpBp_a -> KFpBa
#() iFEvpV -> iFEpV
#() UFsvvs -> UFss
#() pFEppv -> pFEpp
#() LFpBp_iv -> LFpBp_i
#() iFEivpV -> iFEipV
#() iFESvpp -> iFESpp
#() iFESvpV -> iFESpV
#() iFEpvvpV -> iFEppV
#() iFEpuvvppp -> iFEpuppp
wrappedcrashhandler:
wrappedldlinux:
- pFv:
  - ___tls_get_addr
- pFp:
  - __tls_get_addr
wrappedlibc:
- vFv:
- vFp:
  - freeaddrinfo
- iFv:
- iFi:
  - __close_nocancel
- iFL:
- iFp:
  - getifaddrs
- iFh:
  - getwc
- iFO:
- uFu:
- uFp:
- uFV:
- UFp:
- LFL:
- pFv:
  - __ctype_b_loc
  - __ctype_tolower_loc
  - __ctype_toupper_loc
  - __errno_location
  - __h_errno_location
  - localeconv
- pFu:
  - getpwuid
- pFL:
- pFp:
  - gethostbyname
  - gmtime
  - localtime
- vFip:
- vFpi:
- vFpu:
- iFip:
  - futimes
  - getrlimit
  - setrlimit
- iFpi:
  - backtrace
- iFpL:
- iFpp:
  - alphasort64
  - execvp
  - statvfs
  - utimes
- iFpV:
  - execl
  - execlp
- iFSp:
  - statvfs64
- IFII:
- UFUU:
- pFip:
  - signal
- pFpi:
  - backtrace_symbols
- pFpp:
  - gmtime_r
  - localtime_r
- SFpp:
- vFipV:
- vFpup:
  - _ITM_addUserCommitAction
- vFppu:
- iFvpV:
- iFiip:
- iFiiN:
- iFipp:
- iFpLi:
- iFppL:
- iFppp:
  - vswscanf
- iFppV:
  - swscanf
- iFpOu:
- iFSpp:
- iFSpV:
  - fscanf
- KFppa:
  - __strtold_l
  - strtold_l
- lFipi:
  - recvmsg
  - sendmsg
- lFipL:
- lFppi:
- LFppi:
- pFpii:
- pFppv:
  - __realpath_chk
- vFpLLp:
- vFpppp:
  - __libc_init
- iFivpV:
- iFiiip:
- iFipii:
- iFLLLL:
- iFpupV:
- iFpLpV:
- iFppiV:
- iFpppp:
  - getaddrinfo
- iFSvpp:
- iFSvpV:
- LFppiv:
- iFpvvpV:
- iFpippp:
- iFpuppp:
- iFpLppp:
- pFpLLiN:
- iFpLiipV:
- pFpLiiii:
- pFpLiiiI:
- iFpippppp:
- iFpuvvppp:
wrappedlibdl:
- iFp:
  - dlclose
- pFv:
  - dlerror
- iFpp:
  - _dl_find_object
  - dladdr
- pFpi:
  - dlopen
- pFpp:
  - dlsym
- iFpip:
  - dlinfo
- pFppi:
  - dlmopen
- pFppp:
  - dlvsym
- iFpppi:
  - dladdr1
wrappedlibm:
- UFs:
  - cacosf
  - cacoshf
  - casinf
  - casinhf
  - catanf
  - catanhf
  - ccosf
  - ccoshf
  - cexpf
  - clogf
  - cprojf
  - csinf
  - csinhf
  - csqrtf
  - ctanf
  - ctanhf
- fFf:
  - __acosf_finite
  - __acoshf_finite
  - __asinf_finite
  - __coshf_finite
  - __exp2f_finite
  - __expf_finite
  - __log10f_finite
  - __log2f_finite
  - __logf_finite
  - __sinhf_finite
  - __sqrtf_finite
- dFd:
  - __acos_finite
  - __acosh_finite
  - __asin_finite
  - __cosh_finite
  - __exp2_finite
  - __exp_finite
  - __log10_finite
  - __log2_finite
  - __log_finite
  - __sinh_finite
  - __sqrt_finite
- DFD:
  - pow10l
- KFK:
  - acoshl
  - acosl
  - asinhl
  - asinl
  - atanhl
  - cbrtl
  - erfcl
  - erfl
  - ldexpl
  - lgammal
  - logl
  - pow10l
  - tgammal
- fFff:
  - __atan2f_finite
  - __hypotf_finite
  - __powf_finite
- dFdd:
  - __atan2_finite
  - __hypot_finite
  - __pow_finite
- KFKK:
  - fmodl
  - powl
- KFKp:
  - frexpl
  - lgammal_r
- UFsvvs:
  - cpowf
wrappedlibpthread:
- vFv:
  - __pthread_initialize
- vFp:
  - __pthread_register_cancel
  - __pthread_unregister_cancel
  - __pthread_unwind_next
- iFp:
  - __pthread_mutex_destroy
  - __pthread_mutex_lock
  - __pthread_mutex_trylock
  - __pthread_mutex_unlock
  - __pthread_mutexattr_init
  - pthread_attr_destroy
  - pthread_attr_init
  - pthread_cond_broadcast
  - pthread_cond_broadcast@GLIBC_2.0
  - pthread_cond_destroy
  - pthread_cond_destroy@GLIBC_2.0
  - pthread_cond_signal
  - pthread_cond_signal@GLIBC_2.0
  - pthread_mutex_destroy
  - pthread_mutex_lock
  - pthread_mutex_trylock
  - pthread_mutex_unlock
  - pthread_mutexattr_init
  - pthread_rwlock_rdlock
  - pthread_rwlock_unlock
  - pthread_rwlock_wrlock
- iFh:
  - pthread_detach
- vFpi:
  - _pthread_cleanup_pop
  - _pthread_cleanup_pop_restore
- iFpi:
  - pthread_attr_setdetachstate
  - pthread_attr_setinheritsched
  - pthread_attr_setschedpolicy
  - pthread_attr_setscope
  - pthread_mutexattr_setkind_np
- iFpL:
  - pthread_attr_setguardsize
  - pthread_attr_setstacksize
- iFpp:
  - __pthread_key_create
  - __pthread_mutex_init
  - __pthread_once
  - __pthread_rwlock_init
  - pthread_attr_getdetachstate
  - pthread_attr_getguardsize
  - pthread_attr_getinheritsched
  - pthread_attr_getschedparam
  - pthread_attr_getschedpolicy
  - pthread_attr_getscope
  - pthread_attr_getstackaddr
  - pthread_attr_getstacksize
  - pthread_attr_setschedparam
  - pthread_attr_setstackaddr
  - pthread_cond_init
  - pthread_cond_init@GLIBC_2.0
  - pthread_cond_wait
  - pthread_cond_wait@GLIBC_2.0
  - pthread_key_create
  - pthread_mutex_init
  - pthread_mutex_timedlock
  - pthread_once
  - pthread_rwlock_init
- iFhi:
  - pthread_kill
- vFppp:
  - _pthread_cleanup_push
  - _pthread_cleanup_push_defer
- iFLup:
  - pthread_setaffinity_np
- iFpup:
  - pthread_attr_setaffinity_np
  - pthread_getaffinity_np
- iFppL:
  - pthread_attr_setstack
- iFppp:
  - __pthread_atfork
  - pthread_atfork
  - pthread_attr_getstack
- iFppLL:
  - pthread_cond_timedwait
  - pthread_cond_timedwait@GLIBC_2.0
- iFhppp:
  - pthread_create
wrappedlibrt:
